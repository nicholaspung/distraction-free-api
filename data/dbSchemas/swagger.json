{
  "swagger": "2.0",
  "info": {
    "description": "This is the backend server for Distraction Free. ",
    "version": "1.0.0",
    "title": "Distraction Free",
    "termsOfService": "",
    "contact": {
      "email": "nicholaspungdev@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "www.myexperiment.life",
  "basePath": "/api",
  "tags": [
    {
      "name": "master posts",
      "description": "All posts coming from Reddit"
    },
    {
      "name": "posts",
      "description": "Posts pertaining to user's titles saved."
    },
    {
      "name": "titles",
      "description": "Saved titles to check on"
    },
    {
      "name": "users",
      "description": "Users"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/master-posts": {
      "get": {
        "tags": [
          "master posts"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/MasterPosts"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "master posts"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Reddit posts array",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RedditPost"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "master posts"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Deletes a certain Reddit post array by id",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/definitions/Id"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "posts"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User needed to filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Reddit post fields needed to be saved in posts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsertPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "posts"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates post to be toggled read",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "posts"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes post",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "$ref": "#/definitions/Date"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "delete": {
        "tags": [
          "posts"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/posts-together": {
      "get": {
        "tags": [
          "posts"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Gets Reddit post according to user's titles",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/posts-title": {
      "delete": {
        "tags": [
          "posts"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes titles and posts according to user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/titles": {
      "get": {
        "tags": [
          "titles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Gets user's titles",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Titles"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "titles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Adds titles",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "titles"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates title",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "titles"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Delete title from user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Gets user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Adds a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "user"
      ],
      "properties": {
        "user": {
          "type": "string"
        }
      }
    },
    "RedditPost": {
      "type": "object",
      "required": [
        "reddit_posts"
      ],
      "properties": {
        "reddit_posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DefaultRedditPost"
          }
        }
      }
    },
    "DefaultRedditPost": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "reddit_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Post": {
      "type": "object",
      "required": [
        "title",
        "url",
        "reddit_id",
        "user",
        "read",
        "created_at",
        "search_title"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "reddit_id": {
          "type": "integer",
          "format": "int64"
        },
        "user": {
          "type": "string"
        },
        "read": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "description": "new Date()"
        },
        "search_title": {
          "type": "string"
        }
      }
    },
    "InsertPost": {
      "type": "object",
      "required": [
        "title",
        "comments",
        "url",
        "reddit_id",
        "user"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "reddit_id": {
          "type": "integer",
          "format": "int64"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "UpdatePost": {
      "type": "object",
      "required": [
        "user",
        "reddit_id",
        "read"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "reddit_id": {
          "type": "integer",
          "format": "int64"
        },
        "read": {
          "type": "boolean"
        }
      }
    },
    "Posts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Post"
      }
    },
    "MasterPosts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DefaultRedditPost"
      }
    },
    "Id": {
      "type": "string"
    },
    "Message": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Date": {
      "type": "string",
      "description": "new Date()"
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "Title": {
      "type": "string"
    },
    "Titles": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Title"
      }
    }
  }
}